# Root logger configuration
rootLogger.level = info
rootLogger.appenderRef.stdout.ref = console
rootLogger.appenderRef.rolling.ref = fileLogger

# Console appender configuration
appender.console.type = Console
appender.console.name = console
appender.console.target = SYSTEM_ERR
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n%ex

# Logger configurations for Spark components
logger.repl.name = org.apache.spark.repl.Main
logger.repl.level = warn
logger.replSparkILoopInterpreter.name = org.apache.spark.repl.SparkILoop
logger.replSparkILoopInterpreter.level = info
logger.parquet1.name = org.apache.parquet
logger.parquet1.level = error
logger.parquet2.name = parquet
logger.parquet2.level = error
logger.RetryingHMSHandler.name = org.apache.hadoop.hive.metastore.RetryingHMSHandler
logger.RetryingHMSHandler.level = fatal
logger.FunctionRegistry.name = org.apache.hadoop.hive.ql.exec.FunctionRegistry
logger.FunctionRegistry.level = error

# Rolling file appender configuration
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName = ${env:SPARK_LOG_DIR}/${env:LOG_PREFIX}_logs.log
appender.rolling.layout.type = PatternLayout
appender.rolling.filePattern = ${env:SPARK_LOG_DIR}/${env:LOG_PREFIX}_logs_%d{yyyy-MM-dd}.log
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%c] [%M] [%l] - %msg%n

# Time-based and size-based rolling policies
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.modulate = true
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.currentTime = true

# Retention policy: delete files older than 90 days
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB  # Adjust size if needed

appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 90  # Keeps log files for 90 days
